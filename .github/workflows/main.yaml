name: MAIN_PIPELINE
on:
  workflow_dispatch:
  push:
    branches:
      - qa
      - dev
      - main
  pull_request:
      branches:
        - dev     
permissions:
    checks: write
    security-events: write
    packages: write
    actions: write
    pull-requests: write
    contents: read
    
jobs:
    Talisman:
      name: Talisman
      uses: prem1903/ekscluster/.github/workflows/talisman.yml@main
      secrets: inherit
      #octo-org/example-repo/.github/workflows/reusable-workflow.yml@main

    Sbom:
      name: Sbom
      uses: prem1903/ekscluster/.github/workflows/sbom.yml@main
      secrets: inherit

    KICS:
      needs: Talisman
      name: KICS
      uses: prem1903/ekscluster/.github/workflows/KICS.yml@main
      secrets: inherit 
    
    # Unit_Test:
    #   needs: [ Sbom, Talisman ]
    #   name: Unit Test
    #   uses: prem1903/ekscluster/.github/workflows/UnitTest.yaml@main
    #   secrets: inherit

    Build_Test:
      needs: KICS
      name: Build and Test
      uses: prem1903/ekscluster/.github/workflows/build.yaml@main
      secrets: inherit

    Docker_build_push:
      needs: Build  # Assuming this job depends on the 'Build' job
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v3
          with:
              token: ${{secrets.PAT_TOKEN }}
        - name: Download artifact
          uses: actions/download-artifact@v3
          with:
              name: ${{ github.event.repository.name }}-artifact
              path: ./target/*.jar
         
        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_TOKEN }}
    
        - name: Build Container image
          run: docker build -t ${{ secrets.DOCKER_REPO }}:${{ github.run_number }} .
    
        - name: Publish Docker image
          run: docker push ${{ secrets.DOCKER_REPO }}:${{ github.run_number }}
    Trivy:
        needs: Docker_build_push
        name: Trivy Scan
        uses: prem1903/ekscluster/.github/workflows/trivy.yaml@main
        secrets: inherit
    Deployment:
        needs: Docker_build_push
        name: Update image tag
        uses: prem1903/ekscluster/.github/workflows/deployment.yaml@main
        secrets: inherit
    Deploy:
        runs-on: ubuntu-latest
        needs: Deployment 
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v3
            with:
              token: ${{secrets.PAT_TOKEN }}
          - name: Install Kubectl
            uses: azure/setup-kubectl@v3
            with:
            version: 'v1.28.0' # default is latest stable
            id: install
          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ap-south-1
          - name: Set kubectl context
            run: aws eks --region ap-south-1 update-kubeconfig --name module-eks-demo
          
          - name: Checkout Repository
            uses: actions/checkout@v3
            with:
              repository: Expleo-France/Deployment   
              token: ${{ secrets.PAT_TOKEN }}
          - name: Apply Kubernetes manifests
            run: |
             cd ${{ github.event.repository.name }}
             kubectl apply -f deployment.yaml -f service.yml
                
